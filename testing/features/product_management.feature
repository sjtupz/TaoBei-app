# language: zh-CN
功能: 商品管理
  作为一个用户
  我希望能够浏览和搜索商品
  以便找到我需要的商品信息

  背景:
    假设 系统已经启动并运行正常
    并且 测试数据库已经初始化
    并且 系统中存在商品数据

  场景: 成功获取商品列表 - 默认参数
    假设 系统中存在商品数据
    当 用户请求商品列表
    那么 系统返回分页的商品列表
    并且 包含商品的基本信息（ID、名称、价格、图片等）
    并且 商品列表页面显示商品信息
    并且 显示分页控件

  场景大纲: 成功获取商品列表 - 自定义分页参数
    假设 系统中存在商品数据
    当 用户请求商品列表，页码为 <page>，每页数量为 <pageSize>
    那么 系统返回分页的商品列表
    并且 包含商品的基本信息（ID、名称、价格、图片等）
    并且 返回的商品数量不超过 <pageSize>
    并且 商品列表页面显示第 <page> 页的商品

    例子:
      | page | pageSize |
      | 1    | 10       |
      | 2    | 5        |
      | 1    | 20       |
      | 3    | 8        |

  场景大纲: 商品列表分页参数验证
    假设 系统中存在商品数据
    当 用户请求商品列表，页码为 <invalid_page>，每页数量为 <invalid_pageSize>
    那么 系统返回400错误
    并且 错误信息包含 "<error_message>"

    例子:
      | invalid_page | invalid_pageSize | error_message |
      | 0            | 10               | 页码必须是大于0的整数 |
      | -1           | 10               | 页码必须是大于0的整数 |
      | 1            | 0                | 每页数量必须是1-100之间的整数 |
      | 1            | 101              | 每页数量必须是1-100之间的整数 |

  场景大纲: 根据关键词搜索商品
    假设 系统中存在商品数据
    当 用户输入搜索关键词 "<keyword>"
    那么 系统返回匹配的商品列表
    并且 商品列表页面显示搜索结果
    并且 搜索结果中的商品名称包含关键词 "<keyword>"

    例子:
      | keyword |
      | 手机    |
      | 苹果    |
      | iPhone  |
      | 电脑    |

  场景: 搜索不存在的商品
    假设 系统中存在商品数据
    当 用户输入搜索关键词 "不存在的商品xyz123"
    那么 系统返回空的商品列表
    并且 商品列表页面显示 "暂无相关商品"

  场景大纲: 按分类筛选商品
    假设 系统中存在商品数据
    当 用户选择分类 "<category>" 筛选商品
    那么 系统返回该分类下的商品列表
    并且 商品列表页面显示分类筛选结果
    并且 返回的商品都属于分类 "<category>"

    例子:
      | category |
      | 电子产品 |
      | 服装     |
      | 家居用品 |
      | 图书     |

  场景大纲: 按价格排序商品
    假设 系统中存在商品数据
    当 用户选择按价格 "<sortOrder>" 排序
    那么 系统返回排序后的商品列表
    并且 商品列表页面显示按价格排序的商品
    并且 商品按价格 "<sortOrder>" 排列

    例子:
      | sortOrder |
      | ASC       |
      | DESC      |

  场景大纲: 按名称排序商品
    假设 系统中存在商品数据
    当 用户选择按名称 "<sortOrder>" 排序
    那么 系统返回排序后的商品列表
    并且 商品列表页面显示按名称排序的商品

    例子:
      | sortOrder |
      | ASC       |
      | DESC      |

  场景: 组合筛选和搜索
    假设 系统中存在商品数据
    当 用户输入搜索关键词 "手机"，选择分类 "电子产品"，按价格 "ASC" 排序
    那么 系统返回匹配的商品列表
    并且 商品列表页面显示筛选和搜索结果
    并且 返回的商品名称包含 "手机" 且属于 "电子产品" 分类
    并且 商品按价格升序排列

  场景: 成功获取商品详情
    假设 商品ID "1" 存在
    当 用户请求商品详情，商品ID为 "1"
    那么 系统返回完整的商品信息
    并且 包含商品描述、规格、库存、评价等详细信息
    并且 商品详情页面显示完整的商品信息
    并且 显示商品图片、价格、库存状态

  场景: 获取不存在商品的详情
    假设 商品ID "99999" 不存在
    当 用户请求商品详情，商品ID为 "99999"
    那么 系统返回404错误
    并且 错误信息包含 "商品不存在"
    并且 页面显示 "商品不存在" 的提示信息

  场景大纲: 商品ID参数验证
    假设 系统中存在商品数据
    当 用户请求商品详情，商品ID为 "<invalid_id>"
    那么 系统返回400错误
    并且 错误信息包含 "商品ID必须是大于0的整数"

    例子:
      | invalid_id |
      | 0          |
      | -1         |
      | abc        |
      | null       |

  场景: 商品详情页面交互
    假设 商品ID "1" 存在
    并且 用户在商品详情页面
    当 用户查看商品详情
    那么 页面显示商品的所有详细信息
    并且 用户可以查看商品图片
    并且 用户可以查看商品规格
    并且 用户可以查看用户评价
    并且 显示添加到购物车按钮

  # API测试场景
  场景: API - 成功获取商品列表
    假设 系统中存在商品数据
    当 我通过API请求商品列表
    那么 API返回状态码200
    并且 API响应包含商品列表数据
    并且 商品列表包含ID、名称、价格、图片等字段

  场景: API - 带分页参数获取商品列表
    假设 系统中存在商品数据
    当 我通过API请求商品列表，页码为 2，每页数量为 5
    那么 API返回状态码200
    并且 API响应包含分页信息
    并且 返回的商品数量不超过 5

  场景: API - 搜索商品
    假设 系统中存在商品数据
    当 我通过API搜索关键词 "手机"
    那么 API返回状态码200
    并且 API响应包含匹配的商品列表
    并且 商品名称包含关键词 "手机"

  场景: API - 按分类筛选商品
    假设 系统中存在商品数据
    当 我通过API筛选分类 "电子产品"
    那么 API返回状态码200
    并且 API响应包含该分类的商品列表

  场景: API - 商品列表排序
    假设 系统中存在商品数据
    当 我通过API请求商品列表，按价格升序排序
    那么 API返回状态码200
    并且 API响应包含排序后的商品列表
    并且 商品按价格升序排列

  场景: API - 获取商品详情
    假设 商品ID "1" 存在
    当 我通过API请求商品详情，商品ID为 "1"
    那么 API返回状态码200
    并且 API响应包含完整的商品信息
    并且 商品信息包含描述、规格、库存、评价等字段

  场景: API - 获取不存在商品的详情
    假设 商品ID "99999" 不存在
    当 我通过API请求商品详情，商品ID为 "99999"
    那么 API返回状态码404
    并且 API响应包含商品不存在的错误信息

  场景: API - 无效的分页参数
    假设 系统中存在商品数据
    当 我通过API请求商品列表，页码为 0
    那么 API返回状态码400
    并且 API响应包含参数验证失败的错误信息

  场景: API - 无效的商品ID
    假设 系统中存在商品数据
    当 我通过API请求商品详情，商品ID为 "invalid"
    那么 API返回状态码400
    并且 API响应包含商品ID格式错误的信息

  场景: API - 搜索关键词长度验证
    假设 系统中存在商品数据
    当 我通过API搜索超长关键词
    那么 API返回状态码400
    并且 API响应包含关键词长度限制的错误信息